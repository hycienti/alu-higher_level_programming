>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()

# Test the area method
>>> bg.area()
Traceback (most recent call last):
    ...
Exception: area() is not implemented

# Test integer_validator with valid inputs
>>> bg.integer_validator("age", 10)

# Test integer_validator with invalid inputs

# None as value
>>> bg.integer_validator("age", None)
Traceback (most recent call last):
    ...
TypeError: age must be an integer

# Missing value argument
>>> bg.integer_validator("age")
Traceback (most recent call last):
    ...
TypeError: integer_validator() missing 1 required positional argument: 'value'

# List as value
>>> bg.integer_validator("age", [3])
Traceback (most recent call last):
    ...
TypeError: age must be an integer

# Boolean as value
>>> bg.integer_validator("age", True)
Traceback (most recent call last):
    ...
TypeError: age must be an integer

# Set as value
>>> bg.integer_validator("age", {3, 4})
Traceback (most recent call last):
    ...
TypeError: age must be an integer

# Tuple as value
>>> bg.integer_validator("age", (4,))
Traceback (most recent call last):
    ...
TypeError: age must be an integer

# Zero as value
>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
    ...
ValueError: age must be greater than 0

# Negative integer as value
>>> bg.integer_validator("age", -5)
Traceback (most recent call last):
    ...
ValueError: age must be greater than 0
