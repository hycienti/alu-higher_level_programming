>>> from 101-lazy_matrix_mul import lazy_matrix_mul

# Valid matrices
>>> lazy_matrix_mul([[1, 2], [3, 4]], [[5, 6], [7, 8]])
array([[19, 22],
       [43, 50]])

>>> lazy_matrix_mul([[1, 2]], [[3, 4], [5, 6]])
array([[13, 16]])

# Empty matrices
>>> lazy_matrix_mul([], [[5, 6], [7, 8]])
Traceback (most recent call last):
    ...
ValueError: m_a can't be empty

>>> lazy_matrix_mul([[5, 6], [7, 8]], [])
Traceback (most recent call last):
    ...
ValueError: m_b can't be empty

# Non-list arguments
>>> lazy_matrix_mul("Holberton", [[5, 6], [7, 8]])
Traceback (most recent call last):
    ...
TypeError: m_a must be a list

>>> lazy_matrix_mul([[5, 6], [7, 8]], "Holberton")
Traceback (most recent call last):
    ...
TypeError: m_b must be a list

# Lists with invalid elements
>>> lazy_matrix_mul([[5, "6"], [7, 8]], [[5, 6], [7, 8]])
Traceback (most recent call last):
    ...
TypeError: m_a should contain only integers or floats

>>> lazy_matrix_mul([[5, 6], [7, 8]], [[5, "6"], [7, 8]])
Traceback (most recent call last):
    ...
TypeError: m_b should contain only integers or floats

# Rows of inconsistent sizes
>>> lazy_matrix_mul([[5, 6, 10], [7, 8]], [[5, 6], [7, 8]])
Traceback (most recent call last):
    ...
TypeError: each row of m_a must be of the same size

>>> lazy_matrix_mul([[5, 6], [7, 8]], [[5, 6], [7]])
Traceback (most recent call last):
    ...
TypeError: each row of m_b must be of the same size

# Invalid multiplication
>>> lazy_matrix_mul([[1, 2, 3], [4, 5, 6]], [[1, 2], [3, 4]])
Traceback (most recent call last):
    ...
ValueError: m_a and m_b can't be multiplied
